A.averages$head <- ifelse((A.averages[1:149]),0,1)
A.averages$head <- ifelse((A.averages[1:149],),0,1)
A.averages$head <- ifelse((A.averages[1:149,]),0,1)
A.averages$head <- ifelse((A.averages[1:149,]),0,1)
A.averages$head <- ifelse((A.averages$A1ave[1:149,]),0,1)
A.averages$head <- ifelse((A.averages$A1ave[,1:149]),0,1)
A.averages$head <- c(rep(1,149) + rep(0,851))
A.averages$head <- c(rep(1,149), rep(0,851))
A.averages$direction <- ifelse(((A.averages$A1ave - A.averages$A2ave) > 0), -1,1)
A.averages$significant <- A.averages$head * A.averages$direction
ggplot(A1ave~A2ave, data=A.averages, mapping = aes(x = A1ave, y = A2ave, color = significant)) + geom_point() + geom_abline(intercept = 0, slope = 1)
A.averages$significant <- A.averages$significant * 1000
ggplot(A1ave~A2ave, data=A.averages, mapping = aes(x = A1ave, y = A2ave, color = significant)) + geom_point() + geom_abline(intercept = 0, slope = 1)
ggplot(A1ave~A2ave, data=A.averages, mapping = aes(x = A1ave, y = A2ave)) + geom_point(aes(color = significant)) + geom_abline(intercept = 0, slope = 1)
ggplot(A1ave~A2ave, data=A.averages, mapping = aes(x = A1ave, y = A2ave)) + geom_point(aes(color = significant, group = significant)) + geom_abline(intercept = 0, slope = 1)
ggplot(A1ave~A2ave, data=A.averages, mapping = aes(x = A1ave, y = A2ave)) + geom_point(aes(fill = significant)) + geom_abline(intercept = 0, slope = 1)
ggplot(A1ave~A2ave, data=A.averages, mapping = aes(x = A1ave, y = A2ave)) + geom_point() + geom_abline(intercept = 0, slope = 1) + scale_colour_gradientn(colours=rainbow(4))
ggplot(A1ave~A2ave, data=A.averages, mapping = aes(x = A1ave, y = A2ave)) + geom_point() + geom_abline(intercept = 0, slope = 1) + scale_colour_gradientn(colours=rainbow(4))
install.packages("RcolorBrewer")
install.packages("RColorBrewer")
install.packages("RColorBrewer")
library(RColorBrewer)
myColors <- brewer.pal(5,"Set1")
names(myColors) <- levels(A.averages$significant)
colScale <- scale_colour_manual(name = "significant",values = myColors)
ggplot(A1ave~A2ave, data=A.averages, mapping = aes(x = A1ave, y = A2ave, color = significant)) + geom_point() + geom_abline(intercept = 0, slope = 1) + colScale
A.averages$significant <- as.factor(A.averages$head * A.averages$direction)
ggplot(A1ave~A2ave, data=A.averages, mapping = aes(x = A1ave, y = A2ave, color = significant)) + geom_point() + geom_abline(intercept = 0, slope = 1)
setwd("~/Box Sync/Classes/BioDataSkills_BCB546X_Spr17/EEOB546xFINALPROJECT")
library(geomorph)
library(reshape2)
library(ggplot2)
library(contrast)
#input and structure data
cluster_table <- t(head(as.matrix(read.table("table_clusters.txt", header = T)),1000))
#Table 2 (two-way ANOVA test, as done in the paper)
new_table = cluster_table
row.names(new_table) <- c("A1", "A1", "A1", "A2", "A2", "A2", "A2", "D5", "D5", "D5", "D5", "A2", "D5")
melted <- melt(new_table)
Y <- melted$value
Species <- as.factor(melted$Var1)
Cluster <- as.factor(melted$Var2)
linear_model <- lm(Y~Cluster*Species)
anova(linear_model) #same as in paper
#Figure 3 (without colors)
cluster_table <- as.data.frame(t(cluster_table))
cluster_table$A1ave <- rowMeans(subset(cluster_table, select = c(A1_155_, A1_073_, A1_097_), na.rm = TRUE))
cluster_table$A2ave <- rowMeans(subset(cluster_table, select = c(A2_255_, A2_034_, A2_044_, A2_099_, A2_101_), na.rm = TRUE))
A.averages <- subset(cluster_table, select = c(A1ave, A2ave))
row.names(A.averages) <- as.factor(row.names(A.averages))
A.averages$difference <- abs(A.averages$A2ave - A.averages$A1ave)
A.averages <- A.averages[order(-A.averages$difference),]
A.averages$head <- c(rep(1,149), rep(0,851))
A.averages$direction <- ifelse(((A.averages$A1ave - A.averages$A2ave) > 0), -1,1)
A.averages$significant <- as.factor(A.averages$head * A.averages$direction)
ggplot(A1ave~A2ave, data=A.averages, mapping = aes(x = A1ave, y = A2ave, color = significant)) + geom_point() + geom_abline(intercept = 0, slope = 1)
ggplot(A1ave~A2ave, data=A.averages, mapping = aes(x = A1ave, y = A2ave, color = significant)) + geom_point() + geom_abline(intercept = 0, slope = 1)
A.averages <- subset(cluster_table, select = c(A1ave, A2ave))
row.names(A.averages) <- as.factor(row.names(A.averages))
A.averages$difference <- abs(A.averages$A2ave - A.averages$A1ave) / ((A.averages$A1ave + A.averages$A2ave) / 2)
A.averages <- A.averages[order(-A.averages$difference),]
A.averages$head <- c(rep(1,149), rep(0,851))
A.averages$direction <- ifelse(((A.averages$A1ave - A.averages$A2ave) > 0), -1,1)
A.averages$significant <- as.factor(A.averages$head * A.averages$direction)
ggplot(A1ave~A2ave, data=A.averages, mapping = aes(x = A1ave, y = A2ave, color = significant)) + geom_point() + geom_abline(intercept = 0, slope = 1)
Constrast <- contrast(linear_model, list(Cluster = levels(Cluster), Species = "A1"), list(Cluster = levels(Cluster), Species = "A2"))
A.averages$direction <- ifelse((Pvalue < 0.05), -1,1)
Pvalue <- Constrast$Pvalue
A.averages$direction <- ifelse((Pvalue < 0.05), -1,1)
Constrast$Contrast
?contrast
Constrast$testStat
A.averages$head <- sign(Constrast$testStat)
A.averages$significant <- as.factor(A.averages$head * A.averages$direction)
ggplot(A1ave~A2ave, data=A.averages, mapping = aes(x = A1ave, y = A2ave, color = significant)) + geom_point() + geom_abline(intercept = 0, slope = 1)
A.averages$direction <- ifelse((Pvalue < 0.05), 0,1)
A.averages$head <- sign(Constrast$testStat)
A.averages$significant <- as.factor(A.averages$head * A.averages$direction)
ggplot(A1ave~A2ave, data=A.averages, mapping = aes(x = A1ave, y = A2ave, color = significant)) + geom_point() + geom_abline(intercept = 0, slope = 1)
A.averages$direction <- ifelse((Pvalue < 0.05), 1,0)
A.averages$head <- sign(Constrast$testStat)
A.averages$significant <- as.factor(A.averages$head * A.averages$direction)
ggplot(A1ave~A2ave, data=A.averages, mapping = aes(x = A1ave, y = A2ave, color = significant)) + geom_point() + geom_abline(intercept = 0, slope = 1)
cluster_table <- t(head(as.matrix(read.table("table_clusters.txt", header = T)),1000))
new_table = cluster_table
row.names(new_table) <- c("A1", "A1", "A1", "A2", "A2", "A2", "A2", "D5", "D5", "D5", "D5", "A2", "D5")
melted <- melt(new_table)
Y <- melted$value
Species <- as.factor(melted$Var1)
Cluster <- as.factor(melted$Var2)
linear_model <- lm(Y~Cluster*Species)
Contrast.A1.A2 <- contrast(linear_model, list(Cluster = levels(Cluster), Species = "A1"), list(Cluster = levels(Cluster), Species = "A2"))
View(cluster_table)
cluster_table <- as.data.frame(t(cluster_table))
cluster_table$A1ave <- rowMeans(subset(cluster_table, select = c(A1_155_, A1_073_, A1_097_), na.rm = TRUE))
cluster_table$A2ave <- rowMeans(subset(cluster_table, select = c(A2_255_, A2_034_, A2_044_, A2_099_, A2_101_), na.rm = TRUE))
cluster_table$D5ave <- rowMeans(subset(cluster_table, select = c(D5_002_, D5_031_, D5_004_, D5_053_, D5_ggg_), na.rm = TRUE))
A1A2.averages <- subset(cluster_table, select = c(A1ave, A2ave))
A1A2.averages$direction <- ifelse((Contrast.A1.A2$Pvalue < 0.05), 1,0)
A1A2.averages$sign <- sign(Constrast.A1.A2$testStat)
A1A2.averages$significant <- as.factor(A.averages$sign * A.averages$direction)
A1A2.averages$sign <- sign(Contrast.A1.A2$testStat)
A1A2.averages$significant <- as.factor(A1A2.averages$sign * A1A2.averages$direction)
ggplot(A1ave~A2ave, data=A.averages, mapping = aes(x = A1ave, y = A2ave, color = significant)) + geom_point() + geom_abline(intercept = 0, slope = 1)
ggplot(A1ave~A2ave, data=A1A2.averages, mapping = aes(x = A1ave, y = A2ave, color = significant)) + geom_point() + geom_abline(intercept = 0, slope = 1)
A1A2.averages$direction <- ifelse((Contrast.A1.A2$Pvalue < 0.5), 1,0)
A1A2.averages$sign <- sign(Contrast.A1.A2$testStat)
A1A2.averages$significant <- as.factor(A1A2.averages$sign * A1A2.averages$direction)
ggplot(A1ave~A2ave, data=A1A2.averages, mapping = aes(x = A1ave, y = A2ave, color = significant)) + geom_point() + geom_abline(intercept = 0, slope = 1)
A1A2.averages$direction <- ifelse((Contrast.A1.A2$Pvalue < 0.10), 1,0)
A1A2.averages$sign <- sign(Contrast.A1.A2$testStat)
A1A2.averages$significant <- as.factor(A1A2.averages$sign * A1A2.averages$direction)
ggplot(A1ave~A2ave, data=A1A2.averages, mapping = aes(x = A1ave, y = A2ave, color = significant)) + geom_point() + geom_abline(intercept = 0, slope = 1)
cluster_table <- as.data.frame(t(cluster_table))
cluster_table$A1ave <- rowMeans(subset(cluster_table, select = c(A1_155_, A1_073_, A1_097_), na.rm = TRUE))
cluster_table$A2ave <- rowMeans(subset(cluster_table, select = c(A2_255_, A2_034_, A2_044_, A2_099_, A2_101_), na.rm = TRUE))
cluster_table$D5ave <- rowMeans(subset(cluster_table, select = c(D5_002_, D5_031_, D5_004_, D5_053_, D5_ggg_), na.rm = TRUE))
A1A2.averages <- subset(cluster_table, select = c(A1ave, A2ave))
cluster_table$A1A2.direction <- ifelse((Contrast.A1.A2$Pvalue < 0.10), 1,0)
cluster_table$A1A2.sign <- sign(Contrast.A1.A2$testStat)
cluster_table$A1A2.significant <- as.factor(cluster_table$A1A2.sign * cluster_table$A1A2.direction)
cluster_table <- t(head(as.matrix(read.table("table_clusters.txt", header = T)),1000))
cluster_table <- as.data.frame(t(cluster_table))
cluster_table$A1ave <- rowMeans(subset(cluster_table, select = c(A1_155_, A1_073_, A1_097_), na.rm = TRUE))
cluster_table$A2ave <- rowMeans(subset(cluster_table, select = c(A2_255_, A2_034_, A2_044_, A2_099_, A2_101_), na.rm = TRUE))
cluster_table$D5ave <- rowMeans(subset(cluster_table, select = c(D5_002_, D5_031_, D5_004_, D5_053_, D5_ggg_), na.rm = TRUE))
A1A2.averages <- subset(cluster_table, select = c(A1ave, A2ave))
cluster_table$A1A2.direction <- ifelse((Contrast.A1.A2$Pvalue < 0.10), 1,0)
cluster_table$A1A2.sign <- sign(Contrast.A1.A2$testStat)
cluster_table$A1A2.significant <- as.factor(cluster_table$A1A2.sign * cluster_table$A1A2.direction)
ggplot(A1ave~A2ave, data=cluster_table, mapping = aes(x = A1ave, y = A2ave, color = A1A2.significant)) + geom_point() + geom_abline(intercept = 0, slope = 1)
A1A2.clusters <- sum(cluster_table$A1A2.significant != 0)
A1A2.clusters
setwd("~/Box Sync/Classes/BioDataSkills_BCB546X_Spr17/EEOB546xFINALPROJECT")
library(geomorph)
library(reshape2)
library(ggplot2)
library(contrast)
#input and structure data
cluster_table <- t(head(as.matrix(read.table("table_clusters.txt", header = T)),1000))
#Table 2 (two-way ANOVA test, as done in the paper)
new_table = cluster_table
row.names(new_table) <- c("A1", "A1", "A1", "A2", "A2", "A2", "A2", "D5", "D5", "D5", "D5", "A2", "D5")
melted <- melt(new_table)
Y <- melted$value
Species <- as.factor(melted$Var1)
Cluster <- as.factor(melted$Var2)
linear_model <- lm(Y~Cluster*Species)
anova(linear_model) #same as in paper
###Figure 3 (with colors, but no BH correction)
#differences between this figure and Simon's figure is highlighted on Simon_Fig3_discrepency_noBH.png
cluster_table <- as.data.frame(t(cluster_table))
cluster_table$A1ave <- rowMeans(subset(cluster_table, select = c(A1_155_, A1_073_, A1_097_), na.rm = TRUE))
cluster_table$A2ave <- rowMeans(subset(cluster_table, select = c(A2_255_, A2_034_, A2_044_, A2_099_, A2_101_), na.rm = TRUE))
cluster_table$D5ave <- rowMeans(subset(cluster_table, select = c(D5_002_, D5_031_, D5_004_, D5_053_, D5_ggg_), na.rm = TRUE))
#Constrasts
Contrast.A1.A2 <- contrast(linear_model, list(Cluster = levels(Cluster), Species = "A1"), list(Cluster = levels(Cluster), Species = "A2"))
Contrast.A1.D5 <- contrast(linear_model, list(Cluster = levels(Cluster), Species = "A1"), list(Cluster = levels(Cluster), Species = "D5"))
Contrast.A2.D5 <- contrast(linear_model, list(Cluster = levels(Cluster), Species = "A2"), list(Cluster = levels(Cluster), Species = "D5"))
#A1A2 Differences
cluster_table$A1A2.direction <- ifelse((Contrast.A1.A2$Pvalue < 0.05), 1,0)
cluster_table$A1A2.sign <- sign(Contrast.A1.A2$testStat)
cluster_table$A1A2.significant <- as.factor(cluster_table$A1A2.sign * cluster_table$A1A2.direction)
#A1D5 Differences
cluster_table$A1D5.direction <- ifelse((Contrast.A1.D5$Pvalue < 0.05), 1,0)
cluster_table$A1D5.sign <- sign(Contrast.A1.D5$testStat)
cluster_table$A1D5.significant <- as.factor(cluster_table$A1D5.sign * cluster_table$A1D5.direction)
#A2D5 Differences
cluster_table$A2D5.direction <- ifelse((Contrast.A2.D5$Pvalue < 0.05), 1,0)
cluster_table$A2D5.sign <- sign(Contrast.A2.D5$testStat)
cluster_table$A2D5.significant <- as.factor(cluster_table$A2D5.sign * cluster_table$A2D5.direction)
#Plotting Figure 3 (with colors, but no BH correction)
ggplot(A1ave~A2ave, data=cluster_table, mapping = aes(x = A1ave, y = A2ave, color = A1A2.significant)) + geom_point() + geom_abline(intercept = 0, slope = 1)
####Table 3 (not same numbers as paper, but same methods (excpet I didn't do BH correction))
A1A2.clusters <- sum(cluster_table$A1A2.significant != 0)
A1D5.clusters <- sum(cluster_table$A1D5.significant != 0)
A2D5.clusters <- sum(cluster_table$A2D5.significant != 0)
A1A2.clusters
A1D5.clusters
A2D5.clusters
ggplot(A1ave~A2ave, data=cluster_table, mapping = aes(x = A1ave, y = A2ave, color = A1A2.significant)) + geom_point() + geom_abline(intercept = 0, slope = 1)
ggplot(A1ave~D5ave, data=cluster_table, mapping = aes(x = A1ave, y = D5ave, color = A1D5.significant)) + geom_point() + geom_abline(intercept = 0, slope = 1)
ggplot(A2ave~D5ave, data=cluster_table, mapping = aes(x = A2ave, y = D5ave, color = A2D5.significant)) + geom_point() + geom_abline(intercept = 0, slope = 1)
ggplot(A1ave~A2ave, data=cluster_table, mapping = aes(x = A1ave, y = A2ave, color = A1A2.significant, asp=1)) + geom_point() + geom_abline(intercept = 0, slope = 1)
ggplot(A1ave~A2ave, data=cluster_table, mapping = aes(x = A1ave, y = A2ave, color = A1A2.significant)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3750) + ylim(0,3750)
ggplot(A1ave~A2ave, data=cluster_table, mapping = aes(x = A1ave, y = A2ave, color = A1A2.significant)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3600) + ylim(0,3600)
ggplot(A1ave~A2ave, data=cluster_table, mapping = aes(x = A1ave, y = A2ave, color = A1A2.significant)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3600) + ylim(0,3600)
ggplot(A1ave~D5ave, data=cluster_table, mapping = aes(x = A1ave, y = D5ave, color = A1D5.significant)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3600) + ylim(0,3600)
ggplot(A2ave~D5ave, data=cluster_table, mapping = aes(x = A2ave, y = D5ave, color = A2D5.significant)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3600) + ylim(0,3600)
ggplot(A1ave~A2ave, data=cluster_table, mapping = aes(x = A1ave, y = A2ave, color = A1A2.significant)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3500) + ylim(0,3500)
ggplot(A1ave~D5ave, data=cluster_table, mapping = aes(x = A1ave, y = D5ave, color = A1D5.significant)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3500) + ylim(0,3500)
ggplot(A2ave~D5ave, data=cluster_table, mapping = aes(x = A2ave, y = D5ave, color = A2D5.significant)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3500) + ylim(0,3500)
Y <- log(melted$value)
Species <- as.factor(melted$Var1)
Cluster <- as.factor(melted$Var2)
linear_model <- lm(Y~Cluster*Species)
Y <- melted$value
Species <- as.factor(melted$Var1)
Cluster <- as.factor(melted$Var2)
cluster_table <- t(head(as.matrix(read.table("table_clusters.txt", header = T)),1000))
new_table <- cluster_table
new_table <- log(apply(new_table, 2, quantile,.75))
row.names(new_table) <- c("A1", "A1", "A1", "A2", "A2", "A2", "A2", "D5", "D5", "D5", "D5", "A2", "D5")
new_table <- cluster_table
log_offset <- log(apply(new_table, 2, quantile,.75))
row.names(new_table) <- c("A1", "A1", "A1", "A2", "A2", "A2", "A2", "D5", "D5", "D5", "D5", "A2", "D5")
log_offset
View(new_table)
new_table <- cluster_table
log_offset <- log(apply(t(new_table), 2, quantile,.75))
new_table <- cluster_table
log_offset
Y <- sqrt(melted$value)
Species <- as.factor(melted$Var1)
Cluster <- as.factor(melted$Var2)
linear_model <- lm(Y~Cluster*Species)
anova(linear_model) #same as in paper
Contrast.A1.A2 <- contrast(linear_model, list(Cluster = levels(Cluster), Species = "A1"), list(Cluster = levels(Cluster), Species = "A2"))
cluster_table$A1A2.direction <- ifelse((Contrast.A1.A2$Pvalue < 0.05), 1,0)
cluster_table$A1A2.sign <- sign(Contrast.A1.A2$testStat)
cluster_table$A1A2.significant <- as.factor(cluster_table$A1A2.sign * cluster_table$A1A2.direction)
ggplot(A1ave~A2ave, data=cluster_table, mapping = aes(x = A1ave, y = A2ave, color = A1A2.significant)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3500) + ylim(0,3500)
cluster_table$A1A2.direction <- ifelse((Contrast.A1.A2$Pvalue < 0.05), 1,0)
cluster_table$A1A2.sign <- sign(Contrast.A1.A2$testStat)
cluster_table$A1A2.significant <- as.factor(cluster_table$A1A2.sign * cluster_table$A1A2.direction)
ggplot(A1ave~A2ave, data=cluster_table, mapping = aes(x = A1ave, y = A2ave, color = A1A2.significant)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3500) + ylim(0,3500)
cluster_table <- as.data.frame(t(cluster_table))
cluster_table$A1ave <- rowMeans(subset(cluster_table, select = c(A1_155_, A1_073_, A1_097_), na.rm = TRUE))
cluster_table$A2ave <- rowMeans(subset(cluster_table, select = c(A2_255_, A2_034_, A2_044_, A2_099_, A2_101_), na.rm = TRUE))
cluster_table$D5ave <- rowMeans(subset(cluster_table, select = c(D5_002_, D5_031_, D5_004_, D5_053_, D5_ggg_), na.rm = TRUE))
cluster_table <- t(head(as.matrix(read.table("table_clusters.txt", header = T)),1000))
cluster_table <- as.data.frame(t(cluster_table))
cluster_table$A1ave <- rowMeans(subset(cluster_table, select = c(A1_155_, A1_073_, A1_097_), na.rm = TRUE))
cluster_table$A2ave <- rowMeans(subset(cluster_table, select = c(A2_255_, A2_034_, A2_044_, A2_099_, A2_101_), na.rm = TRUE))
cluster_table$D5ave <- rowMeans(subset(cluster_table, select = c(D5_002_, D5_031_, D5_004_, D5_053_, D5_ggg_), na.rm = TRUE))
ggplot(A1ave~A2ave, data=cluster_table, mapping = aes(x = A1ave, y = A2ave, color = A1A2.significant)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3500) + ylim(0,3500)
cluster_table$A1A2.direction <- ifelse((Contrast.A1.A2$Pvalue < 0.05), 1,0)
cluster_table$A1A2.sign <- sign(Contrast.A1.A2$testStat)
cluster_table$A1A2.significant <- as.factor(cluster_table$A1A2.sign * cluster_table$A1A2.direction)
ggplot(A1ave~A2ave, data=cluster_table, mapping = aes(x = A1ave, y = A2ave, color = A1A2.significant)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3500) + ylim(0,3500)
A1A2.clusters <- sum(cluster_table$A1A2.significant != 0)
A1A2.clusters
install.packages("DESeq2")
source("https://bioconductor.org/biocLite.R")
biocLite("DESeq2")
library(DESeq2)
cluster_table <- t(head(as.matrix(read.table("table_clusters.txt", header = T)),1000))
new_table <- cluster_table
row.names(new_table) <- c("A1", "A1", "A1", "A2", "A2", "A2", "A2", "D5", "D5", "D5", "D5", "A2", "D5")
melted <- melt(rlog(new_table))
View(new_table)
Log <- rlog(t(new_table))
new_table <- cluster_table
Log <- rlog(t(new_table))
row.names(new_table) <- c("A1", "A1", "A1", "A2", "A2", "A2", "A2", "D5", "D5", "D5", "D5", "A2", "D5")
View(Log)
row.names(Log) <- c("A1", "A1", "A1", "A2", "A2", "A2", "A2", "D5", "D5", "D5", "D5", "A2", "D5")
Log <- t(rlog(t(new_table)))
new_table <- cluster_table
Log <- t(rlog(t(new_table)))
row.names(Log) <- c("A1", "A1", "A1", "A2", "A2", "A2", "A2", "D5", "D5", "D5", "D5", "A2", "D5")
melted <- melt(Log)
Y <- melted$value
Species <- as.factor(melted$Var1)
Cluster <- as.factor(melted$Var2)
linear_model <- lm(Y~Cluster*Species)
anova(linear_model) #same as in paper
cluster_table <- as.data.frame(t(cluster_table))
cluster_table$A1ave <- rowMeans(subset(cluster_table, select = c(A1_155_, A1_073_, A1_097_), na.rm = TRUE))
cluster_table$A2ave <- rowMeans(subset(cluster_table, select = c(A2_255_, A2_034_, A2_044_, A2_099_, A2_101_), na.rm = TRUE))
cluster_table$D5ave <- rowMeans(subset(cluster_table, select = c(D5_002_, D5_031_, D5_004_, D5_053_, D5_ggg_), na.rm = TRUE))
Contrast.A1.A2 <- contrast(linear_model, list(Cluster = levels(Cluster), Species = "A1"), list(Cluster = levels(Cluster), Species = "A2"))
cluster_table$A1A2.direction <- ifelse((Contrast.A1.A2$Pvalue < 0.05), 1,0)
cluster_table$A1A2.sign <- sign(Contrast.A1.A2$testStat)
cluster_table$A1A2.significant <- as.factor(cluster_table$A1A2.sign * cluster_table$A1A2.direction)
ggplot(A1ave~A2ave, data=cluster_table, mapping = aes(x = A1ave, y = A2ave, color = A1A2.significant)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3500) + ylim(0,3500)
A1A2.clusters <- sum(cluster_table$A1A2.significant != 0)
A1A2.clusters
cluster_table <- t(head(as.matrix(read.table("table_clusters.txt", header = T)),1000))
new_table <- cluster_table
row.names(new_table) <- c("A1", "A1", "A1", "A2", "A2", "A2", "A2", "D5", "D5", "D5", "D5", "A2", "D5")
Y <- melt(new_table)$value
Species <- as.factor(melted$Var1)
Cluster <- as.factor(melted$Var2)
melted <- melt(new_table)
Y <- melted$value
Species <- as.factor(melted$Var1)
Cluster <- as.factor(melted$Var2)
linear_model <- lm(Y~Cluster*Species)
anova(linear_model) #same as in paper
cluster_table <- as.data.frame(t(cluster_table))
cluster_table$A1ave <- rowMeans(subset(cluster_table, select = c(A1_155_, A1_073_, A1_097_), na.rm = TRUE))
cluster_table$A2ave <- rowMeans(subset(cluster_table, select = c(A2_255_, A2_034_, A2_044_, A2_099_, A2_101_), na.rm = TRUE))
cluster_table$D5ave <- rowMeans(subset(cluster_table, select = c(D5_002_, D5_031_, D5_004_, D5_053_, D5_ggg_), na.rm = TRUE))
Contrast.A1.A2 <- contrast(linear_model, list(Cluster = levels(Cluster), Species = "A1"), list(Cluster = levels(Cluster), Species = "A2"))
cluster_table$A1A2.direction <- ifelse((Contrast.A1.A2$Pvalue < 0.05), 1,0)
cluster_table$A1A2.sign <- sign(Contrast.A1.A2$testStat)
cluster_table$A1A2.significant <- as.factor(cluster_table$A1A2.sign * cluster_table$A1A2.direction)
ggplot(A1ave~A2ave, data=cluster_table, mapping = aes(x = A1ave, y = A2ave, color = A1A2.significant)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3500) + ylim(0,3500)
A1A2.clusters <- sum(cluster_table$A1A2.significant != 0)
A1A2.clusters
setwd("~/Box Sync/Classes/BioDataSkills_BCB546X_Spr17/EEOB546xFINALPROJECT")
library(geomorph)
library(reshape2)
library(ggplot2)
library(contrast)
#input and structure data
cluster_table <- t(head(as.matrix(read.table("table_clusters.txt", header = T)),1000))
#Table 2 (two-way ANOVA test, as done in the paper)
new_table <- cluster_table
row.names(new_table) <- c("A1", "A1", "A1", "A2", "A2", "A2", "A2", "D5", "D5", "D5", "D5", "A2", "D5")
melted <- melt(new_table)
Y <- melted$value
Species <- as.factor(melted$Var1)
Cluster <- as.factor(melted$Var2)
linear_model <- lm(Y~Cluster*Species)
anova(linear_model) #same as in paper
###Figure 3 (with colors, but no BH correction)
#differences between this figure and Simon's figure is highlighted on Simon_Fig3_discrepency_noBH.png
cluster_table <- as.data.frame(t(cluster_table))
cluster_table$A1ave <- rowMeans(subset(cluster_table, select = c(A1_155_, A1_073_, A1_097_), na.rm = TRUE))
cluster_table$A2ave <- rowMeans(subset(cluster_table, select = c(A2_255_, A2_034_, A2_044_, A2_099_, A2_101_), na.rm = TRUE))
cluster_table$D5ave <- rowMeans(subset(cluster_table, select = c(D5_002_, D5_031_, D5_004_, D5_053_, D5_ggg_), na.rm = TRUE))
#Constrasts
Contrast.A1.A2 <- contrast(linear_model, list(Cluster = levels(Cluster), Species = "A1"), list(Cluster = levels(Cluster), Species = "A2"))
Contrast.A1.D5 <- contrast(linear_model, list(Cluster = levels(Cluster), Species = "A1"), list(Cluster = levels(Cluster), Species = "D5"))
Contrast.A2.D5 <- contrast(linear_model, list(Cluster = levels(Cluster), Species = "A2"), list(Cluster = levels(Cluster), Species = "D5"))
#A1A2 Differences
cluster_table$A1A2.direction <- ifelse((Contrast.A1.A2$Pvalue < 0.05), 1,0)
cluster_table$A1A2.sign <- sign(Contrast.A1.A2$testStat)
cluster_table$A1A2.significant <- as.factor(cluster_table$A1A2.sign * cluster_table$A1A2.direction)
#A1D5 Differences
cluster_table$A1D5.direction <- ifelse((Contrast.A1.D5$Pvalue < 0.05), 1,0)
cluster_table$A1D5.sign <- sign(Contrast.A1.D5$testStat)
cluster_table$A1D5.significant <- as.factor(cluster_table$A1D5.sign * cluster_table$A1D5.direction)
#A2D5 Differences
cluster_table$A2D5.direction <- ifelse((Contrast.A2.D5$Pvalue < 0.05), 1,0)
cluster_table$A2D5.sign <- sign(Contrast.A2.D5$testStat)
cluster_table$A2D5.significant <- as.factor(cluster_table$A2D5.sign * cluster_table$A2D5.direction)
#Plotting Figure 3 (with colors, but no BH correction)
ggplot(A1ave~A2ave, data=cluster_table, mapping = aes(x = A1ave, y = A2ave, color = A1A2.significant)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3500) + ylim(0,3500)
ggplot(A1ave~D5ave, data=cluster_table, mapping = aes(x = A1ave, y = D5ave, color = A1D5.significant)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3500) + ylim(0,3500)
ggplot(A2ave~D5ave, data=cluster_table, mapping = aes(x = A2ave, y = D5ave, color = A2D5.significant)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3500) + ylim(0,3500)
####Table 3 (not same numbers as paper, but same methods (excpet I didn't do BH correction))
A1A2.clusters <- sum(cluster_table$A1A2.significant != 0)
A1D5.clusters <- sum(cluster_table$A1D5.significant != 0)
A2D5.clusters <- sum(cluster_table$A2D5.significant != 0)
A1A2.clusters
A1D5.clusters
A2D5.clusters
cluster_table$A1D5.direction.BH <- ifelse((p.adjust(Contrast.A1.D5$Pvalue, method = "BH") < 0.05), 1,0)
cluster_table$A1D5.significant.BH <- as.factor(cluster_table$A1D5.sign * cluster_table$A1D5.direction.BH)
A1A2.clusters.BH <- sum(cluster_table$A1A2.significant.BH != 0)
A1A2.clusters.BH
?padjust
?p.adjust
cluster_table$A1A2.direction.BH <- ifelse((p.adjust(Contrast.A1A2$Pvalue, method = "BH") < 0.05), 1,0)
cluster_table$A1A2.direction.BH <- ifelse((p.adjust(Contrast.A1.A2$Pvalue, method = "BH") < 0.05), 1,0)
cluster_table$A1A2.significant.BH <- as.factor(cluster_table$A1A2.sign * cluster_table$A1A2.direction.BH)
A1A2.clusters.BH <- sum(cluster_table$A1A2.significant.BH != 0)
A1A2.clusters.BH
cluster_table$A2D5.direction.BH <- ifelse((p.adjust(Contrast.A2.D5$Pvalue, method = "BH") < 0.05), 1,0)
cluster_table$A2D5.significant.BH <- as.factor(cluster_table$A2D5.sign * cluster_table$A2D5.direction.BH)
A1A2.clusters.BH <- sum(cluster_table$A1A2.significant.BH != 0)
A1D5.clusters.BH <- sum(cluster_table$A1D5.significant.BH != 0)
A2D5.clusters.BH <- sum(cluster_table$A2D5.significant.BH != 0)
A1A2.clusters.BH
A1D5.clusters.BH
A2D5.clusters.BH
A1A2.clusters <- sum(cluster_table$A1A2.significant != 0)
A1D5.clusters <- sum(cluster_table$A1D5.significant != 0)
A2D5.clusters <- sum(cluster_table$A2D5.significant != 0)
A1A2.clusters
A1D5.clusters
A2D5.clusters
ggplot(A1ave~A2ave, data=cluster_table, mapping = aes(x = A1ave, y = A2ave, color = A1A2.significant.BH)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3500) + ylim(0,3500)
ggplot(A1ave~D5ave, data=cluster_table, mapping = aes(x = A1ave, y = D5ave, color = A1D5.significant.BH)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3500) + ylim(0,3500)
ggplot(A2ave~D5ave, data=cluster_table, mapping = aes(x = A2ave, y = D5ave, color = A2D5.significant.BH)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3500) + ylim(0,3500)
ggplot(A1ave~A2ave, data=cluster_table, mapping = aes(x = A1ave, y = A2ave, color = A1A2.significant)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3500) + ylim(0,3500)
ggplot(A1ave~A2ave, data=cluster_table, mapping = aes(x = A1ave, y = A2ave, color = A1A2.significant.BH)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3500) + ylim(0,3500)
ggplot(A1ave~D5ave, data=cluster_table, mapping = aes(x = A1ave, y = D5ave, color = A1D5.significant)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3500) + ylim(0,3500)
ggplot(A1ave~D5ave, data=cluster_table, mapping = aes(x = A1ave, y = D5ave, color = A1D5.significant.BH)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3500) + ylim(0,3500)
ggplot(A2ave~D5ave, data=cluster_table, mapping = aes(x = A2ave, y = D5ave, color = A2D5.significant)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3500) + ylim(0,3500)
ggplot(A2ave~D5ave, data=cluster_table, mapping = aes(x = A2ave, y = D5ave, color = A2D5.significant.BH)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3500) + ylim(0,3500)
A1A2.clusters <- sum(cluster_table$A1A2.significant != 0)
A1D5.clusters <- sum(cluster_table$A1D5.significant != 0)
A2D5.clusters <- sum(cluster_table$A2D5.significant != 0)
A1A2.clusters
A1D5.clusters
A2D5.clusters
A1A2.clusters.BH <- sum(cluster_table$A1A2.significant.BH != 0)
A1D5.clusters.BH <- sum(cluster_table$A1D5.significant.BH != 0)
A2D5.clusters.BH <- sum(cluster_table$A2D5.significant.BH != 0)
A1A2.clusters.BH
A1D5.clusters.BH
A2D5.clusters.BH
A1A2D5 <- as.factor(c("A1", "A1", "A1", "A2", "A2", "A2", "A2", "D5", "D5", "D5", "D5", "A2", "D5"))
PermManova <- advanced.procD.lm(cluster_table~A1A2D5, ~1, groups = A1A2D5)
View(cluster_table)
PermManova <- advanced.procD.lm(t(cluster_table)~A1A2D5, ~1, groups = A1A2D5)
new_linear_model <- lm(t(cluster_table)~A1A2D5)
A1A2D5 <- as.factor(c("A1", "A1", "A1", "A2", "A2", "A2", "A2", "D5", "D5", "D5", "D5", "A2", "D5"))
new_table <- t(cluster_table)
new_linear_model <- lm(new_table~A1A2D5)
View(new_table)
cluster_matrix <- t(head(as.matrix(read.table("table_clusters.txt", header = T)),1000))
A1A2D5 <- as.factor(c("A1", "A1", "A1", "A2", "A2", "A2", "A2", "D5", "D5", "D5", "D5", "A2", "D5"))
PermManova <- advanced.procD.lm(t(cluster_matrix)~A1A2D5, ~1, groups = A1A2D5)
View(cluster_matrix)
PermManova <- advanced.procD.lm(cluster_matrix~A1A2D5, ~1, groups = A1A2D5)
new_linear_model <- lm(cluster_matrix~A1A2D5)
PermManova <- advanced.procD.lm(new_linear_model~A1A2D5, ~1, groups = A1A2D5)
PermManova <- advanced.procD.lm(new_linear_model~A1A2D5, ~1)
PermManova <- advanced.procD.lm(cluster_matrix~A1A2D5, ~1)
PermManova
PermManova <- advanced.procD.lm(cluster_matrix~A1A2D5, ~1, groups = A1A2D5)
PermManova <- advanced.procD.lm(cluster_matrix~A1A2D5, ~1, groups = A1A2D5)
PermManova <- advanced.procD.lm(cluster_matrix~A1A2D5, ~ 1, groups = A1A2D5)
PermManova <- advanced.procD.lm(cluster_matrix~A1A2D5, ~ 1, groups = levels(A1A2D5))
PermManova <- advanced.procD.lm(cluster_matrix~A1A2D5, ~ 1, groups = ~A1A2D5)
PermManova
View(cluster_matrix)
AD <- as.factor(c("A", "A", "A", "A", "A", "A", "A", "D", "D", "D", "D", "A", "D"))
PermManova.2species <- advanced.procD.lm(cluster_matrix~AD, ~ 1, groups = ~AD)
PermManova.2species
View(cluster_matrix)
Awild <- as.factor(c("A", "Awild", "A", "A", "A", "A", "A", "D", "D", "D", "D", "A", "D"))
PermManova.commonwild <- advanced.procD.lm(cluster_matrix~Awild, ~ 1, groups = ~Awild)
PermManova.commonwild
PermManova.3species <- advanced.procD.lm(cluster_matrix~A1A2D5, ~ 1, groups = ~A1A2D5)
PermManova.3species$P.means.dist
PermManova.2species$P.means.dist
PermManova.commonwild$P.means.dist
setwd("~/Box Sync/Classes/BioDataSkills_BCB546X_Spr17/EEOB546xFINALPROJECT")
library(geomorph)
library(reshape2)
library(ggplot2)
library(contrast)
#input and structure data
cluster_matrix <- t(head(as.matrix(read.table("table_clusters.txt", header = T)),1000))
#Table 2 (two-way ANOVA test, as done in the paper)
new_table <- cluster_matrix
row.names(new_table) <- c("A1", "A1", "A1", "A2", "A2", "A2", "A2", "D5", "D5", "D5", "D5", "A2", "D5")
melted <- melt(new_table)
Y <- melted$value
Species <- as.factor(melted$Var1)
Cluster <- as.factor(melted$Var2)
linear_model <- lm(Y~Cluster*Species)
anova(linear_model) #same as in paper
###Figure 3 (with colors, but no BH correction)
#differences between this figure and Simon's figure is highlighted on Simon_Fig3_discrepency_noBH.png
cluster_table <- as.data.frame(t(cluster_matrix))
cluster_table$A1ave <- rowMeans(subset(cluster_table, select = c(A1_155_, A1_073_, A1_097_), na.rm = TRUE))
cluster_table$A2ave <- rowMeans(subset(cluster_table, select = c(A2_255_, A2_034_, A2_044_, A2_099_, A2_101_), na.rm = TRUE))
cluster_table$D5ave <- rowMeans(subset(cluster_table, select = c(D5_002_, D5_031_, D5_004_, D5_053_, D5_ggg_), na.rm = TRUE))
#Constrasts
Contrast.A1.A2 <- contrast(linear_model, list(Cluster = levels(Cluster), Species = "A1"), list(Cluster = levels(Cluster), Species = "A2"))
Contrast.A1.D5 <- contrast(linear_model, list(Cluster = levels(Cluster), Species = "A1"), list(Cluster = levels(Cluster), Species = "D5"))
Contrast.A2.D5 <- contrast(linear_model, list(Cluster = levels(Cluster), Species = "A2"), list(Cluster = levels(Cluster), Species = "D5"))
#A1A2 Differences
cluster_table$A1A2.direction <- ifelse((Contrast.A1.A2$Pvalue < 0.05), 1,0)
cluster_table$A1A2.direction.BH <- ifelse((p.adjust(Contrast.A1.A2$Pvalue, method = "BH") < 0.05), 1,0)
cluster_table$A1A2.sign <- sign(Contrast.A1.A2$testStat)
cluster_table$A1A2.significant <- as.factor(cluster_table$A1A2.sign * cluster_table$A1A2.direction)
cluster_table$A1A2.significant.BH <- as.factor(cluster_table$A1A2.sign * cluster_table$A1A2.direction.BH)
#A1D5 Differences
cluster_table$A1D5.direction <- ifelse((Contrast.A1.D5$Pvalue < 0.05), 1,0)
cluster_table$A1D5.direction.BH <- ifelse((p.adjust(Contrast.A1.D5$Pvalue, method = "BH") < 0.05), 1,0)
cluster_table$A1D5.sign <- sign(Contrast.A1.D5$testStat)
cluster_table$A1D5.significant <- as.factor(cluster_table$A1D5.sign * cluster_table$A1D5.direction)
cluster_table$A1D5.significant.BH <- as.factor(cluster_table$A1D5.sign * cluster_table$A1D5.direction.BH)
#A2D5 Differences
cluster_table$A2D5.direction <- ifelse((Contrast.A2.D5$Pvalue < 0.05), 1,0)
cluster_table$A2D5.direction.BH <- ifelse((p.adjust(Contrast.A2.D5$Pvalue, method = "BH") < 0.05), 1,0)
cluster_table$A2D5.sign <- sign(Contrast.A2.D5$testStat)
cluster_table$A2D5.significant <- as.factor(cluster_table$A2D5.sign * cluster_table$A2D5.direction)
cluster_table$A2D5.significant.BH <- as.factor(cluster_table$A2D5.sign * cluster_table$A2D5.direction.BH)
####Table 3 (not same numbers as paper, but same methods
#without BH correction
A1A2.clusters <- sum(cluster_table$A1A2.significant != 0)
A1D5.clusters <- sum(cluster_table$A1D5.significant != 0)
A2D5.clusters <- sum(cluster_table$A2D5.significant != 0)
A1A2.clusters
A1D5.clusters
A2D5.clusters
#with BH correction
A1A2.clusters.BH <- sum(cluster_table$A1A2.significant.BH != 0)
A1D5.clusters.BH <- sum(cluster_table$A1D5.significant.BH != 0)
A2D5.clusters.BH <- sum(cluster_table$A2D5.significant.BH != 0)
A1A2.clusters.BH
A1D5.clusters.BH
A2D5.clusters.BH
#Plotting Figure 3 (With color, with and without BH correction)
ggplot(A1ave~A2ave, data=cluster_table, mapping = aes(x = A1ave, y = A2ave, color = A1A2.significant)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3500) + ylim(0,3500)
ggplot(A1ave~A2ave, data=cluster_table, mapping = aes(x = A1ave, y = A2ave, color = A1A2.significant.BH)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3500) + ylim(0,3500)
ggplot(A1ave~D5ave, data=cluster_table, mapping = aes(x = A1ave, y = D5ave, color = A1D5.significant)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3500) + ylim(0,3500)
ggplot(A1ave~D5ave, data=cluster_table, mapping = aes(x = A1ave, y = D5ave, color = A1D5.significant.BH)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3500) + ylim(0,3500)
ggplot(A2ave~D5ave, data=cluster_table, mapping = aes(x = A2ave, y = D5ave, color = A2D5.significant)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3500) + ylim(0,3500)
ggplot(A2ave~D5ave, data=cluster_table, mapping = aes(x = A2ave, y = D5ave, color = A2D5.significant.BH)) + geom_point() + geom_abline(intercept = 0, slope = 1) + xlim(0, 3500) + ylim(0,3500)
########################################################
########### What Simon Should Have Done  ###############
########################################################
#factors for manova tests
A1A2D5 <- as.factor(c("A1", "A1", "A1", "A2", "A2", "A2", "A2", "D5", "D5", "D5", "D5", "A2", "D5"))
AD <- as.factor(c("A", "A", "A", "A", "A", "A", "A", "D", "D", "D", "D", "A", "D"))
Awild <- as.factor(c("A", "Awild", "A", "A", "A", "A", "A", "D", "D", "D", "D", "A", "D"))
PermManova.3species <- advanced.procD.lm(cluster_matrix~A1A2D5, ~ 1, groups = ~A1A2D5)
PermManova.2species <- advanced.procD.lm(cluster_matrix~AD, ~ 1, groups = ~AD)
PermManova.commonwild <- advanced.procD.lm(cluster_matrix~Awild, ~ 1, groups = ~Awild)
PermManova.3species$P.means.dist
PermManova.2species$P.means.dist
PermManova.commonwild$P.means.dist
